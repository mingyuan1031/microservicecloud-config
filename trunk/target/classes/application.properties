## 全局配置
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
spring.profiles.active=localtest
spring.mvc.favicon.enabled=true

## 静态资源映射
spring.resources.static-locations=file:${upload.file.upload.component.tempRootPath}/,file:${upload.file.upload.component.rootPath}/,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/static/resources/images/,classpath:/public/,

## Mybatis database cfg
jdbc.host=192.168.1.4
jdbc.schema=newstore
jdbc.password=lwxf@123

## server
server.servlet.jsp.class-name=org.apache.jasper.servlet.JspServlet
server.port=8080
server.error.path=/error
server.servlet.session.timeout=1800s
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.name=PHPSESSID
server.servlet.session.tracking-modes=cookie
## tomcat自动刷新，pom中需要配置插件
#server.servlet.jsp.init-parameters.development=true

## system config
lwxf.base.domain.url=http://newstore.htjjsc.com
lwxf.uniquekey.workerId=1
lwxf.uniquekey.datacenterId=1
lwxf.user.default.avatar=http://newstore.htjjsc.com/man.png

## shiro的权限缓存有效时间（Redis缓存，单位：小时）
lwxf.shiro.permission.cache.expire=4

## csrf防攻击配置
org.owasp.csrfguard.action.Redirect.Page=%servletContext%/error
org.owasp.csrfguard.TokenName=X-PHPSESSID

## 公司id
lwxf.company.id=40ord3va6adp
## database
# 加密内容：ip=port=dbname=user=password，在AppTest.java中进行加密
lwxf.db=48f957191a2525999e06a5a4c6ff65364e4c90167b31b6c87c7b3c7516ea3331323fc67954a754a5b9209c77e77d8e70867202ca0281fe9d
# 使用druid数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=60
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
#配置时区 GMT 格林威治时间 如果为北京时间则配置为：GMT+8
spring.jackson.time-zone=GMT
# 返回出来的时间数据需要直接成 固定的String格式RFC3339
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ssZ

## i18n setting.
spring.messages.basename=i18n/message
# 设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1
# spring.messages.cache-seconds= 3600
# 设定Message bundles的编码，默认: UTF-8
# spring.messages.encoding=UTF-8

## 文件上传
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1

## shiro cookie and session config
# remeber me cookie max age / s
shiro.rememberme.max.age=63072000
# shiro session expire / s
shiro.session.redis.expire=10800

## send cloud config，邮件发送配置
sendcloud.conn=ca13d802b804ad6a05d3231e9ea38ec7de3e92f53c091e864d4187fa081b21fd64f72233da1e3d62fb77b3389db4d65dc97b9788cba2d7f3bc17b41a1c365d17
sendcloud.templates=easypm4_activation=easypm4_forgot_password=easypm4_invitation=easypm_system=user_mail_list@maillist.sendcloud.org=easypm_system_upgrade=uppass_notification=easypm4_online
system.reserved.keys=all|module|label|status|filter

# redis 配置
lwxf.redis.database=0
# 指定主机地址192.168.1.4
lwxf.redis.host=48f957191a252599a572013f4ed937ae
# 指定Redis监听端口，默认端口为6379
lwxf.redis.port=f6c12220dd3829b0
#授权密码（默认为空）
lwxf.redis.password=3414c2c1f95d82e905d29199f44f1968
lwxf.redis.pool.maxIdle=5
# 最大连接数：能够同时建立的“最大连接个数”
lwxf.redis.pool.maxActive=10000
# 最大等待时间：单位ms
lwxf.redis.pool.maxWait=1000
# 使用连接时，检测连接是否成功
lwxf.redis.pool.testOnBorrow=true
# 当客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能
lwxf.redis.pool.timeout=10000
# 缓存redis配置结束

## Rabbit MQ 配置
# host:192.168.1.4
lwxf.rabbitmq.serverHost=3ecf840c3186b7e59bcfe925596b5c3c
#端口5672
lwxf.rabbitmq.port=80ed74d61ca8fc66
# username:lwxf
lwxf.rabbitmq.username=2ee8795f18d5afae
# password:lwxf123
lwxf.rabbitmq.password=2d129e23914032f5
lwxf.rabbitmq.virtualHost=/newstore
lwxf.rabbitmq.connectionTimeout=0
lwxf.rabbitmq.heartbeat=60

## 七牛配置
qn_bucket_high_frequency=temp=https://dn-lwxf-temp.qbox.me/=avatar|background|easypm_blog|easypm_help
qn_bucket_low_frequency=temp=https://dn-lwxf-temp.qbox.me/=default|doc|task|project|feedback|help|blog|rap
lwxf.qn=17faa53f1c12b6e78b82040f4c3ffca7
## 上传文件的根目录（七牛）
upload.file.contextPath=/p/
upload.file.upload.component.rootPath=/wwwdata/workarea/upload
upload.file.upload.component.tempRootPath=/wwwdata/workarea/temp
upload.file.upload.component.modulePathMapping.brand=${upload.file.contextPath}brand/{0}/
upload.file.upload.component.modulePathMapping.goods=${upload.file.contextPath}goods/{0}/
upload.file.upload.component.modulePathMapping.goodscomment=${upload.file.contextPath}goods/{0}/goodscomment/
upload.file.upload.component.modulePathMapping.goodsshow=${upload.file.contextPath}goods/{0}/goodsshow/
upload.file.upload.component.modulePathMapping.goodsspec=${upload.file.contextPath}goods/{0}/goodsextends/
upload.file.upload.component.modulePathMapping.storecfg=${upload.file.contextPath}storecfg/{0}/
upload.file.upload.component.modulePathMapping.background=${upload.file.contextPath}user/{0}/
upload.file.upload.component.modulePathMapping.storehomenav=${upload.file.contextPath}storehomenav/{0}/
upload.file.upload.component.modulePathMapping.avatar=${upload.file.contextPath}user/{0}/
upload.file.upload.component.modulePathMapping.quickshare=${upload.file.contextPath}quickshare/
upload.file.upload.component.modulePathMapping.advertising=${upload.file.contextPath}advertising/{0}/
upload.file.upload.component.modulePathMapping.scheme_cover=${upload.file.contextPath}scheme/{0}/
upload.file.upload.component.modulePathMapping.scheme_panorama=${upload.file.contextPath}scheme/{0}/

## 微信配置
# 绑定成功提醒
lwxf.wx.msg.templatge.bind.success=2LoFFRS4wBN6Ud0eKFp0IlhAubB5gZgIMGRojNHmZSw
# 注册成功通知
lwxf.wx.msg.templatge.register.success=DFJK2Y_CATvqfptNG6mpSymYJCgUCAMk23TAaBIGY-0
# 用户注销通知
lwxf.wx.msg.templatge.user.leave=LMgKZjBZYrEXxxyWWNy5EssOmvTMKfnMc0v4euorN3E
# 预约成功提醒
lwxf.wx.msg.templatge.reservation.success=JpW46pPz2VgESfBaHAwWs0Bysoaaf7qDOYMBBBa4CaU
# 申请成功通知
lwxf.wx.msg.templatge.apply.success=weiqy3aRO9lT7KbmZRx79GJExMVs0LKA-pGkIyUDy8w
#商品库存不足通知
lwxf.wx.msg.templatge.lack.goods=AZS2BWFTI_-qFgiTMMhF310dWvdVBdhr5t61G6rylco
#新订单通知
lwxf.wx.msg.templatge.addorder.success=UWvGvROpQwfqCaZZj8WO87g3xWDWNTeudGYLTs-wFCI
#订单提交失败通知
lwxf.wx.msg.templatge.addorder.fail=vz90qnmKkVC2Hle7iWdE-Qcbr5kBM-QhCUhApGm7tK4
#购买成功通知
lwxf.wx.msg.templatge.pay.success=pmR_8mJkHCNh21OOfim2rrfR_XGh3_FYW5LBd7MVd-A
#商品添加通知
lwxf.wx.msg.templatge.add.goods=dndWs3R0JrvuE5izk4I32H6ISA3XF5TgNjHRpjOWJIA
#订单发货通知
lwxf.wx.msg.order.delivery.success=q8BjeXc0njepdQu6Rsv-czLLGUA-WPS5rUDr2Ru6wKM
#订单评价提醒
lwxf.wx.msg.templatge.order.evaluate=Rlk9BfUJqHsErQ6oqXQd8zZUyyFZ_cSfYAytwUnldwY
#订单评价回复
lwxf.wx.msg.templatge.order.reply=hb7pWdDh_YC_fn2sflkDb1kgdij6jZLLMXGGPGtqxf4
#订单关闭通知
lwxf.wx.msg.templatge.order.close=Micon-f6svjQydAdi2SbMLOyGyy8HaonapoxXA9Imf0
# 微信接口访问配置
lwxf.wx.access.cfg=4913523b5d29f590084be9a5521ebbf6bf028ffa8c10bc1d7f3fa420ce9ea050ab1f6cba57bc5d0506dfe77af6bd4b782a8ef22356d24f0e3be2fb6d80427dd672c7eaafca17cb88208ea9bac002f6aea9048d1d69576c9e531b34ef7a658b53
# 微信支付配置
lwxf.wx.pay.appId=wxbad0d3ebdb4e26dc
lwxf.wx.pay.mchId=1490627782
lwxf.wx.pay.mchKey=ge9a8c811kjj97llshu5711bwq8mn6yn
#lwxf.wx.pay.subAppId=
#lwxf.wx.pay.subMchId=
lwxf.wx.pay.keyPath=classpath:apiclient_cert.p12
lwxf.wx.pay.notifyUrl = http://newstore.htjjsc.com/wxpay/notify

## sms手机短信配置（短信平台）
sms.accessKeyId=ce82e34261080d62468c856b585ed9d2
sms.accessKeySecret=ce82e34261080d626d46caaf9a703ac43a464a29bc3cd70d

#任务调度服务
lwxf.schedule.enable=false

