<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lwxf.newstore.webapp.domain.dao.order.OrderGoodsDao">
    <resultMap id="OrderGoodsMap" type="com.lwxf.newstore.webapp.domain.entity.order.OrderGoods">
        <id column="id" property="id" jdbcType="CHAR"/>
        <result column="order_id" property="orderId" jdbcType="CHAR"/>
        <result column="goods_extend_id" property="goodsExtendId" jdbcType="CHAR"/>
        <result column="goods_amount" property="goodsAmount" jdbcType="INTEGER"/>
        <result column="paid_price" property="paidPrice" jdbcType="DECIMAL"/>
        <result column="descr" property="descr" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
    </resultMap>

    <resultMap id="GoodsDetailsDtoMap" type="com.lwxf.newstore.webapp.domain.dto.order.GoodsDetailsDto">
        <id column="id" property="id" jdbcType="CHAR"/>
        <result column="order_id" property="orderId" jdbcType="CHAR"/>
        <result column="goods_extend_id" property="goodsExtendId" jdbcType="CHAR"/>
        <result column="goods_amount" property="goodsAmount" jdbcType="INTEGER"/>
        <result column="paid_price" property="paidPrice" jdbcType="DECIMAL"/>
        <result column="descr" property="descr" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="options" property="options" jdbcType="VARCHAR"/>
        <result column="goods_id" property="goodsId" jdbcType="CHAR"/>
        <result column="originalprice" property="originalprice" jdbcType="DECIMAL"/>
        <result column="smallimage" property="smallimage" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="columns">
id, order_id, goods_extend_id, goods_amount, paid_price, descr, status
</sql>


    <select id="selectById" resultMap="OrderGoodsMap" parameterType="String">
        SELECT
        <include refid="columns"/>
        FROM order_goods
        WHERE id = #{id}
    </select>
    <select id="selectGoodsDetailsByOrderId" resultMap="GoodsDetailsDtoMap" parameterType="String">
       SELECT od.id,od.order_id,od.goods_extend_id,od.goods_amount,od.paid_price,od.descr,od.`status`
    ,ge.`options`,ge.originalprice,ge.smallimage,ge.goods_id,
    g.`name` from order_goods od,goods_extend ge,goods g WHERE od.goods_extend_id=ge.id AND ge.goods_id=g.id AND od.order_id=#{orderId};
    </select>

    <select id="selectByOrderId" resultMap="OrderGoodsMap" parameterType="String">
        SELECT
        <include refid="columns"/>
        FROM order_goods
        WHERE order_id = #{orderId}
    </select>
    <select id="selectByIds" resultMap="OrderGoodsMap">
        SELECT
        <include refid="columns"/>
        FROM order_goods
        WHERE id in
        <foreach collection="array" item="Id" index="index" open="(" separator="," close=")">
            #{Id}
        </foreach>
    </select>

    <select id="selectByFilter" resultMap="OrderGoodsMap">
        SELECT
        <include refid="columns"/>
        FROM order_goods
        <where>
            <trim prefixOverrides="AND">
                <if test="id != null">
                    id = #{id}
                </if>
                <if test="orderId != null">
                    AND order_id = #{orderId}
                </if>
                <if test="goodsExtendId != null">
                    AND goods_extend_id = #{goodsExtendId}
                </if>
                <if test="goodsAmount != null">
                    AND goods_amount = #{goodsAmount}
                </if>
                <if test="paidPrice != null">
                    AND paid_price = #{paidPrice}
                </if>
                <if test="descr != null">
                    AND descr = #{descr}
                </if>
                <if test="status != null">
                    AND status = #{status}
                </if>
            </trim>
        </where>

    </select>

    <insert id="insert" useGeneratedKeys="false">
      INSERT INTO
        order_goods(id, order_id, goods_extend_id, goods_amount, paid_price, descr, status)
     VALUES(#{id}, #{orderId}, #{goodsExtendId}, #{goodsAmount}, #{paidPrice}, #{descr}, #{status})
    </insert>

    <insert id="insertByBatch" parameterType="java.util.List">
        INSERT INTO
        order_goods(id, order_id, goods_extend_id, goods_amount, paid_price, descr, status)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.orderId}, #{item.goodsExtendId}, #{item.goodsAmount}, #{item.paidPrice}, #{item.descr},
            #{item.status})
        </foreach>
    </insert>

    <update id="updateByMapContext">
        UPDATE order_goods
        <set>
            <trim suffixOverrides=",">
                <if test="_parameter.containsKey('orderId') and orderId != null">
                    order_id = #{orderId},
                </if>
                <if test="_parameter.containsKey('goodsExtendId') and goodsExtendId != null">
                    goods_extend_id = #{goodsExtendId},
                </if>
                <if test="_parameter.containsKey('goodsAmount') and goodsAmount != null">
                    goods_amount = #{goodsAmount},
                </if>
                <if test="_parameter.containsKey('paidPrice') and paidPrice != null">
                    paid_price = #{paidPrice},
                </if>
                <if test="_parameter.containsKey('descr')">
                    descr = #{descr},
                </if>
                <if test="_parameter.containsKey('status') and status != null">
                    status = #{status}
                </if>
            </trim>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="String">
DELETE FROM   order_goods
WHERE  id = #{id}
</delete>

</mapper>
